/*
 * Slinky
 */

#s7 {
  overflow-x: hidden;
  overflow-y: visible;
  padding-left: 0;
  padding-right: 0;
  // Text still needs padding.
  p {
    padding-left: 1em;
  }


  p.slinky-desc,
  p.etwas-desc {
    position: absolute;
  }

  /* -- make sure to declare a default for every property that you want animated -- */
  .slinky {
    position: absolute;
    top: 20em;
    left: 14em;
    @include transform(rotateX(-90deg) rotateY(0deg) rotateZ(54deg) translateX(15em));
    @include transform-origin(50%, 50%);
    @include transform-style(preserve-3d);
    @include transition(all 1.25s ease-in-out);

    .segment {
      float: none;
      position: absolute;
      top: -.275em;
      left: -.275em;
      z-index: 900;
      width: 10em;
      height: 10em;
      border: .3em solid #888;
      background: transparent;
      @include border-radius(5em);
      @include box-shadow(
        0 0 .07em .07em #000,
  inset 0 0 .07em .03em #000,
        0 0 3em rgba(#000, 0.7)
      );

      // initial slinky position
      @include transform-origin(0%, 0%);
      @include transform-style(preserve-3d);

      // transition is the magic sauce for animation
      @include transition(all 0.5s ease-in-out);
    }
  }

  // The slinky segments at rest
  .slinky .segment .segment {
    @include transform(translateZ(-.15em));
    @include box-shadow(
      0 0 .07em .07em #000,
      inset 0 0 .07em .03em #000
    );
  }

  // Semi-circle slinky
  .slinky.half .segment .segment {
    @include transform(translateZ(-.15em) rotateY(5.1deg));

    &.last {
      // This puts a box-shadow on the last element when it is touching the "floor"
      @include box-shadow(
        0 0 .07em .07em #000,
        inset 0 0 .07em .07em #000,
        0 0 3em rgba(#000, 0.5)
      );
    }
  }

  // Full-circle slinky
  .slinky.full {
    // kill shadow on base segment
    > .segment {
      @include box-shadow(none);
    }

    .segment .segment {
      @include transform(translateZ(-.15em) rotateY(10.3deg));
    }
  }

  // Move the slinky over
  .slinky.move {
    @include transform(rotateX(-90deg) rotateY(0deg) rotateZ(154deg) translateX(25em) translateY(-15em) translateZ(-5em));
  }


  // Stretched-out slinky
  .slinky.stretched {
    // slow this effect down
    @include transition(all 2s ease-in-out);

    // position slinky using base segment
    > .segment {
      @include transform(rotateY(120deg) rotateX(10deg) translateX(-3em));
      @include box-shadow(none);
    }
    .segment .segment {
      @include transform(translateZ(-1.16em) rotateY(-2deg));
    }
  }

  // Oscillating slinky
  // The two animations work in tandem with the other
  .slinky.oscillate {
    // Slinky base
    > .segment {
      @include animation('slinky-base-osc' 1s ease-in-out infinite alternate);
      @include transform(rotateY(120deg) rotateX(10deg) translateX(-3em));
      @include box-shadow(none);
    }
    .segment .segment {
      @include animation('slinky-segment-osc' 1s ease-in-out infinite alternate);
      @include transform(translateZ(-1.16em) rotateY(-2deg));
    }
  }

  .solar-system {
    position: absolute;
    opacity: 0; // hidden until .space class is added to #s7
    @include transition(opacity 1s ease-in-out);
    @include animation('move-sun' 120s linear infinite);

    .sun {
      position: absolute;
      width: 2em;
      height: 2em;
      @include border-radius(1em);
      background: #fd0;
      @include background-image(radial-gradient(1em 1em, #ff0 0, #ff7200 1.3em));
      @include box-shadow(0 0 .6em .3em rgba(#f90, .5), inset 0 0 .5em #fa0);
      
      @include transform(rotateZ(0deg));

      .earth {
        position: absolute;
        
        width: .8em;
        height: .8em;
        left: .5em;
        top: .5em;
        @include border-radius(.6em);
        @include background-image(radial-gradient(.6em .5em, #00f 0, #1e90ff .6em));
        @include transform(translateX(3em));
        @include transform-origin(-3.5em, 0%);
        @include animation('rotate-earth' 10s linear infinite);

        .moon {
          position: absolute;

          width: .3em;
          height: .3em;
          left: .32em;
          top: .32em;
          @include border-radius(.4em);
          @include background-image(radial-gradient(.26em .3em, #ccc 0, #777 10px));
          @include transform(translateX(1em));
          @include transform-origin(-1.32em, 0%);
          @include animation('rotate-moon' 4s linear infinite);
        }        
      }
    }
  }

  // License: http://creativecommons.org/licenses/by-sa/3.0/deed.en
  // Source:  http://en.wikipedia.org/wiki/File:Vermont_night_sky_stargazing.JPG
  //
  // Add this image to the slide initially but let .space display it
  @include background(#fff image-url('space-bg.jpg') no-repeat 0% -960px);
  @include transition(background-position 1.2s ease-in-out);

  &.space {
    // Move space bg into view
    background-position: 0 0;
    // Make text legible
    color: #fff;
    text-shadow: 0 0 .2em #000;
    
    // Show solar system
    .solar-system {
      opacity: 1;
    }
  }

}

//
// Slinky keyframes
//
@include keyframes('slinky-base-osc') {
  to {
    @include transform(rotateY(132deg) rotateX(10deg) translateX(-3.2em));
  }
}
@include keyframes('slinky-segment-osc') {
  to {
    @include transform(translateZ(-1.36em) rotateY(-3deg));
  }
}

//
// Solar system keyframes
//
@include keyframes('move-sun') {
  0% {
    @include transform(translateX(37em) translateY(7em));
  }
  100% {
    @include transform(translateX(-3em) translateY(5.5em));
  }
}
@include keyframes('rotate-earth') {
  0% {
    @include transform(translateX(3.5em) rotateZ(0deg));
  }
  100% {
    @include transform(translateX(3.5em) rotateZ(360deg));
  }
}

@include keyframes('rotate-moon') {
  0% {
    @include transform(translateX(2em) rotateZ(0deg));
  }
  100% {
    @include transform(translateX(2em) rotateZ(360deg));
  }
}
